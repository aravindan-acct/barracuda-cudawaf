=begin
#Rule Group Server ssl policy API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 3.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for SwaggerClient::RuleGroupServerSslPolicyBody
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'RuleGroupServerSslPolicyBody' do
  before do
    # run before each test
    @instance = SwaggerClient::RuleGroupServerSslPolicyBody.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of RuleGroupServerSslPolicyBody' do
    it 'should create an instance of RuleGroupServerSslPolicyBody' do
      expect(@instance).to be_instance_of(SwaggerClient::RuleGroupServerSslPolicyBody)
    end
  end
  describe 'test attribute "enable_ssl_3"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["Yes", "No"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.enable_ssl_3 = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "enable_sni"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["Yes", "No"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.enable_sni = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "enable_tls_1_1"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["Yes", "No"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.enable_tls_1_1 = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "enable_tls_1_2"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["Yes", "No"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.enable_tls_1_2 = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "enable_ssl_compatibility_mode"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["Yes", "No"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.enable_ssl_compatibility_mode = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "client_certificate"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "enable_https"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["On", "Off"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.enable_https = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "validate_certificate"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["Yes", "No"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.validate_certificate = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "enable_tls_1"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["Yes", "No"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.enable_tls_1 = value }.not_to raise_error
       #end
    end
  end

end

