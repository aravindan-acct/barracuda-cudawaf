=begin
#ssl client authentication API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 3.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for SwaggerClient::SslClientAuthenticationBody
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'SslClientAuthenticationBody' do
  before do
    # run before each test
    @instance = SwaggerClient::SslClientAuthenticationBody.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SslClientAuthenticationBody' do
    it 'should create an instance of SslClientAuthenticationBody' do
      expect(@instance).to be_instance_of(SwaggerClient::SslClientAuthenticationBody)
    end
  end
  describe 'test attribute "trusted_certificates"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "enforce_client_certificate"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["Yes", "No"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.enforce_client_certificate = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "client_certificate_for_rule"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "client_authentication"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["Disable", "For Service", "For Selected Rule(s)"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.client_authentication = value }.not_to raise_error
       #end
    end
  end

end

