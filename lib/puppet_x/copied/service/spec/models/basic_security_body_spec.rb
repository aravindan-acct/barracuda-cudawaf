=begin
#basic security API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 3.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for SwaggerClient::BasicSecurityBody
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'BasicSecurityBody' do
  before do
    # run before each test
    @instance = SwaggerClient::BasicSecurityBody.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of BasicSecurityBody' do
    it 'should create an instance of BasicSecurityBody' do
      expect(@instance).to be_instance_of(SwaggerClient::BasicSecurityBody)
    end
  end
  describe 'test attribute "rate_control_status"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["On", "Off"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.rate_control_status = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "rate_control_pool"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "web_firewall_log_level"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["0-Emergency", "1-Alert", "2-Critical", "3-Error", "4-Warning", "5-Notice", "6-Information", "7-Debug"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.web_firewall_log_level = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "trusted_hosts_group"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "mode"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["Passive", "Active"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.mode = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "client_ip_addr_header"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "ignore_case"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["Yes", "No"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.ignore_case = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "trusted_hosts_action"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["Allow", "Passive", "Default"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.trusted_hosts_action = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "web_firewall_policy"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end

