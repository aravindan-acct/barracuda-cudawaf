=begin
#load balancing API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 3.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for SwaggerClient::LoadBalancingBody
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'LoadBalancingBody' do
  before do
    # run before each test
    @instance = SwaggerClient::LoadBalancingBody.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of LoadBalancingBody' do
    it 'should create an instance of LoadBalancingBody' do
      expect(@instance).to be_instance_of(SwaggerClient::LoadBalancingBody)
    end
  end
  describe 'test attribute "persistence_cookie_domain"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "algorithm"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["Round Robin", "Weighted Round Robin", "Least Requests"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.algorithm = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "source_ip_netmask"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "persistence_method"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["None", "Source IP", "Cookie Insert", "Cookie Passive", "HTTP Header", "URL Parameter"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.persistence_method = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "cookie_age"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "persistence_idle_timeout"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "persistence_cookie_name"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "persistence_cookie_path"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "parameter_name"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "failover_method"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["Load Balance", "Error"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.failover_method = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "header_name"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end

