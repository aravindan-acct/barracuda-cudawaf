=begin
#Security Policy url normalization API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 3.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for SwaggerClient::SecurityPolicyUrlNormalizationBody
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'SecurityPolicyUrlNormalizationBody' do
  before do
    # run before each test
    @instance = SwaggerClient::SecurityPolicyUrlNormalizationBody.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SecurityPolicyUrlNormalizationBody' do
    it 'should create an instance of SecurityPolicyUrlNormalizationBody' do
      expect(@instance).to be_instance_of(SwaggerClient::SecurityPolicyUrlNormalizationBody)
    end
  end
  describe 'test attribute "parameter_separators"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["Ampersand and Semicolon", "Ampersand only", "Semicolon only"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.parameter_separators = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "default_charset"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["ASCII", "ISO-8859-1", "UTF-8", "GBK", "GB2312", "ISO-2022-CN", "HZ", "BIG5", "EUC-TW", "Shift-JIS", "EUC-JP", "ISO-2022-JP", "EUC-KR", "JOHAB", "ISO-2022-KR"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.default_charset = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "detect_response_charset"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["Yes", "No"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.detect_response_charset = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "apply_double_decoding"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["Yes", "No"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.apply_double_decoding = value }.not_to raise_error
       #end
    end
  end

end

