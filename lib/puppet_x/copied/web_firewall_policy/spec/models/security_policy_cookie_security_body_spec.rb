=begin
#Security Policy cookie security API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 3.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for SwaggerClient::SecurityPolicyCookieSecurityBody
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'SecurityPolicyCookieSecurityBody' do
  before do
    # run before each test
    @instance = SwaggerClient::SecurityPolicyCookieSecurityBody.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SecurityPolicyCookieSecurityBody' do
    it 'should create an instance of SecurityPolicyCookieSecurityBody' do
      expect(@instance).to be_instance_of(SwaggerClient::SecurityPolicyCookieSecurityBody)
    end
  end
  describe 'test attribute "cookie_replay_protection_type"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["none", "IP", "Custom Headers", "IP and Custom Headers"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.cookie_replay_protection_type = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "custom_headers"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "secure_cookie"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["Yes", "No"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.secure_cookie = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "http_only"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["Yes", "No"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.http_only = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "tamper_proof_mode"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["Encrypted", "Signed", "None"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.tamper_proof_mode = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "cookie_max_age"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "cookies_exempted"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "allow_unrecognized_cookies"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["Never", "Always", "Custom"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.allow_unrecognized_cookies = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "days_allowed"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end

