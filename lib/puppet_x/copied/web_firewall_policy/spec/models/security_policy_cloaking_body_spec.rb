=begin
#Security Policy cloaking API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 3.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for SwaggerClient::SecurityPolicyCloakingBody
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'SecurityPolicyCloakingBody' do
  before do
    # run before each test
    @instance = SwaggerClient::SecurityPolicyCloakingBody.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SecurityPolicyCloakingBody' do
    it 'should create an instance of SecurityPolicyCloakingBody' do
      expect(@instance).to be_instance_of(SwaggerClient::SecurityPolicyCloakingBody)
    end
  end
  describe 'test attribute "filter_response_header"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["Yes", "No"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.filter_response_header = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "return_codes_to_exempt"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "headers_to_filter"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "suppress_return_code"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["Yes", "No"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.suppress_return_code = value }.not_to raise_error
       #end
    end
  end

end

